// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: data/data.proto

package data

import (
	flipt "go.flipt.io/flipt/rpc/flipt"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EvaluationDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleId            string  `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	VariantId         string  `protobuf:"bytes,3,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	VariantKey        string  `protobuf:"bytes,4,opt,name=variant_key,json=variantKey,proto3" json:"variant_key,omitempty"`
	VariantAttachment string  `protobuf:"bytes,5,opt,name=variant_attachment,json=variantAttachment,proto3" json:"variant_attachment,omitempty"`
	Rollout           float32 `protobuf:"fixed32,6,opt,name=rollout,proto3" json:"rollout,omitempty"`
}

func (x *EvaluationDistribution) Reset() {
	*x = EvaluationDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationDistribution) ProtoMessage() {}

func (x *EvaluationDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationDistribution.ProtoReflect.Descriptor instead.
func (*EvaluationDistribution) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{0}
}

func (x *EvaluationDistribution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EvaluationDistribution) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *EvaluationDistribution) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *EvaluationDistribution) GetVariantKey() string {
	if x != nil {
		return x.VariantKey
	}
	return ""
}

func (x *EvaluationDistribution) GetVariantAttachment() string {
	if x != nil {
		return x.VariantAttachment
	}
	return ""
}

func (x *EvaluationDistribution) GetRollout() float32 {
	if x != nil {
		return x.Rollout
	}
	return 0
}

type EvaluationRollout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type flipt.RolloutType `protobuf:"varint,1,opt,name=type,proto3,enum=flipt.RolloutType" json:"type,omitempty"`
	Rank int32             `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	// Types that are assignable to Rule:
	//
	//	*EvaluationRollout_Segment
	//	*EvaluationRollout_Threshold
	Rule isEvaluationRollout_Rule `protobuf_oneof:"rule"`
}

func (x *EvaluationRollout) Reset() {
	*x = EvaluationRollout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationRollout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationRollout) ProtoMessage() {}

func (x *EvaluationRollout) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationRollout.ProtoReflect.Descriptor instead.
func (*EvaluationRollout) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{1}
}

func (x *EvaluationRollout) GetType() flipt.RolloutType {
	if x != nil {
		return x.Type
	}
	return flipt.RolloutType(0)
}

func (x *EvaluationRollout) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (m *EvaluationRollout) GetRule() isEvaluationRollout_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (x *EvaluationRollout) GetSegment() *EvaluationRolloutSegment {
	if x, ok := x.GetRule().(*EvaluationRollout_Segment); ok {
		return x.Segment
	}
	return nil
}

func (x *EvaluationRollout) GetThreshold() *EvaluationRolloutThreshold {
	if x, ok := x.GetRule().(*EvaluationRollout_Threshold); ok {
		return x.Threshold
	}
	return nil
}

type isEvaluationRollout_Rule interface {
	isEvaluationRollout_Rule()
}

type EvaluationRollout_Segment struct {
	Segment *EvaluationRolloutSegment `protobuf:"bytes,3,opt,name=segment,proto3,oneof"`
}

type EvaluationRollout_Threshold struct {
	Threshold *EvaluationRolloutThreshold `protobuf:"bytes,4,opt,name=threshold,proto3,oneof"`
}

func (*EvaluationRollout_Segment) isEvaluationRollout_Rule() {}

func (*EvaluationRollout_Threshold) isEvaluationRollout_Rule() {}

type EvaluationRolloutThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage float32 `protobuf:"fixed32,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Value      bool    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EvaluationRolloutThreshold) Reset() {
	*x = EvaluationRolloutThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationRolloutThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationRolloutThreshold) ProtoMessage() {}

func (x *EvaluationRolloutThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationRolloutThreshold.ProtoReflect.Descriptor instead.
func (*EvaluationRolloutThreshold) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{2}
}

func (x *EvaluationRolloutThreshold) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *EvaluationRolloutThreshold) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type EvaluationRolloutSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value           bool                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	SegmentOperator flipt.SegmentOperator `protobuf:"varint,2,opt,name=segment_operator,json=segmentOperator,proto3,enum=flipt.SegmentOperator" json:"segment_operator,omitempty"`
	Segments        []*EvaluationSegment  `protobuf:"bytes,3,rep,name=segments,proto3" json:"segments,omitempty"`
}

func (x *EvaluationRolloutSegment) Reset() {
	*x = EvaluationRolloutSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationRolloutSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationRolloutSegment) ProtoMessage() {}

func (x *EvaluationRolloutSegment) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationRolloutSegment.ProtoReflect.Descriptor instead.
func (*EvaluationRolloutSegment) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{3}
}

func (x *EvaluationRolloutSegment) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *EvaluationRolloutSegment) GetSegmentOperator() flipt.SegmentOperator {
	if x != nil {
		return x.SegmentOperator
	}
	return flipt.SegmentOperator(0)
}

func (x *EvaluationRolloutSegment) GetSegments() []*EvaluationSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type EvaluationSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string                  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name        string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MatchType   flipt.MatchType         `protobuf:"varint,4,opt,name=match_type,json=matchType,proto3,enum=flipt.MatchType" json:"match_type,omitempty"`
	CreatedAt   *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Constraints []*EvaluationConstraint `protobuf:"bytes,7,rep,name=constraints,proto3" json:"constraints,omitempty"`
}

func (x *EvaluationSegment) Reset() {
	*x = EvaluationSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationSegment) ProtoMessage() {}

func (x *EvaluationSegment) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationSegment.ProtoReflect.Descriptor instead.
func (*EvaluationSegment) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{4}
}

func (x *EvaluationSegment) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EvaluationSegment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EvaluationSegment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EvaluationSegment) GetMatchType() flipt.MatchType {
	if x != nil {
		return x.MatchType
	}
	return flipt.MatchType(0)
}

func (x *EvaluationSegment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EvaluationSegment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *EvaluationSegment) GetConstraints() []*EvaluationConstraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

type EvaluationFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Enabled     bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Type        flipt.FlagType         `protobuf:"varint,5,opt,name=type,proto3,enum=flipt.FlagType" json:"type,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Rules       []*EvaluationRule      `protobuf:"bytes,8,rep,name=rules,proto3" json:"rules,omitempty"`
	Rollouts    []*EvaluationRollout   `protobuf:"bytes,9,rep,name=rollouts,proto3" json:"rollouts,omitempty"`
}

func (x *EvaluationFlag) Reset() {
	*x = EvaluationFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationFlag) ProtoMessage() {}

func (x *EvaluationFlag) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationFlag.ProtoReflect.Descriptor instead.
func (*EvaluationFlag) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{5}
}

func (x *EvaluationFlag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EvaluationFlag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EvaluationFlag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EvaluationFlag) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EvaluationFlag) GetType() flipt.FlagType {
	if x != nil {
		return x.Type
	}
	return flipt.FlagType(0)
}

func (x *EvaluationFlag) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EvaluationFlag) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *EvaluationFlag) GetRules() []*EvaluationRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *EvaluationFlag) GetRollouts() []*EvaluationRollout {
	if x != nil {
		return x.Rollouts
	}
	return nil
}

type EvaluationConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type     flipt.ComparisonType `protobuf:"varint,2,opt,name=type,proto3,enum=flipt.ComparisonType" json:"type,omitempty"`
	Property string               `protobuf:"bytes,3,opt,name=property,proto3" json:"property,omitempty"`
	Operator string               `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	Value    string               `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EvaluationConstraint) Reset() {
	*x = EvaluationConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationConstraint) ProtoMessage() {}

func (x *EvaluationConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationConstraint.ProtoReflect.Descriptor instead.
func (*EvaluationConstraint) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{6}
}

func (x *EvaluationConstraint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EvaluationConstraint) GetType() flipt.ComparisonType {
	if x != nil {
		return x.Type
	}
	return flipt.ComparisonType(0)
}

func (x *EvaluationConstraint) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *EvaluationConstraint) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *EvaluationConstraint) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type EvaluationRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Segments        []*EvaluationSegment      `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	Rank            int32                     `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	SegmentOperator flipt.SegmentOperator     `protobuf:"varint,4,opt,name=segment_operator,json=segmentOperator,proto3,enum=flipt.SegmentOperator" json:"segment_operator,omitempty"`
	Distributions   []*EvaluationDistribution `protobuf:"bytes,5,rep,name=distributions,proto3" json:"distributions,omitempty"`
}

func (x *EvaluationRule) Reset() {
	*x = EvaluationRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationRule) ProtoMessage() {}

func (x *EvaluationRule) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationRule.ProtoReflect.Descriptor instead.
func (*EvaluationRule) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{7}
}

func (x *EvaluationRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EvaluationRule) GetSegments() []*EvaluationSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *EvaluationRule) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *EvaluationRule) GetSegmentOperator() flipt.SegmentOperator {
	if x != nil {
		return x.SegmentOperator
	}
	return flipt.SegmentOperator(0)
}

func (x *EvaluationRule) GetDistributions() []*EvaluationDistribution {
	if x != nil {
		return x.Distributions
	}
	return nil
}

type EvaluationNamespaceSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace *flipt.Namespace  `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Flags     []*EvaluationFlag `protobuf:"bytes,2,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *EvaluationNamespaceSnapshot) Reset() {
	*x = EvaluationNamespaceSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationNamespaceSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationNamespaceSnapshot) ProtoMessage() {}

func (x *EvaluationNamespaceSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationNamespaceSnapshot.ProtoReflect.Descriptor instead.
func (*EvaluationNamespaceSnapshot) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{8}
}

func (x *EvaluationNamespaceSnapshot) GetNamespace() *flipt.Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *EvaluationNamespaceSnapshot) GetFlags() []*EvaluationFlag {
	if x != nil {
		return x.Flags
	}
	return nil
}

type EvaluationNamespaceSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *EvaluationNamespaceSnapshotRequest) Reset() {
	*x = EvaluationNamespaceSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationNamespaceSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationNamespaceSnapshotRequest) ProtoMessage() {}

func (x *EvaluationNamespaceSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationNamespaceSnapshotRequest.ProtoReflect.Descriptor instead.
func (*EvaluationNamespaceSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_data_data_proto_rawDescGZIP(), []int{9}
}

func (x *EvaluationNamespaceSnapshotRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_data_data_proto protoreflect.FileDescriptor

var file_data_data_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0b, 0x66,
	0x6c, 0x69, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x16,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x12, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x09,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x52, 0x0a, 0x1a,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xae, 0x01, 0x0a, 0x18, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xc6, 0x02, 0x0a, 0x11, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xfa, 0x02, 0x0a, 0x0e, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x14, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x0e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x08,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x41, 0x0a, 0x10, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x48,
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7f, 0x0a, 0x1b, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x6c, 0x69,
	0x70, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c,
	0x61, 0x67, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x36, 0x0a, 0x22, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x32, 0x85, 0x01, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x76, 0x0a, 0x1b, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x2e, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x45, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x6f, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x74, 0x2e, 0x69, 0x6f, 0x2f, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2f, 0x72,
	0x70, 0x63, 0x2f, 0x66, 0x6c, 0x69, 0x70, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_data_proto_rawDescOnce sync.Once
	file_data_data_proto_rawDescData = file_data_data_proto_rawDesc
)

func file_data_data_proto_rawDescGZIP() []byte {
	file_data_data_proto_rawDescOnce.Do(func() {
		file_data_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_data_proto_rawDescData)
	})
	return file_data_data_proto_rawDescData
}

var file_data_data_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_data_data_proto_goTypes = []interface{}{
	(*EvaluationDistribution)(nil),             // 0: flipt.data.EvaluationDistribution
	(*EvaluationRollout)(nil),                  // 1: flipt.data.EvaluationRollout
	(*EvaluationRolloutThreshold)(nil),         // 2: flipt.data.EvaluationRolloutThreshold
	(*EvaluationRolloutSegment)(nil),           // 3: flipt.data.EvaluationRolloutSegment
	(*EvaluationSegment)(nil),                  // 4: flipt.data.EvaluationSegment
	(*EvaluationFlag)(nil),                     // 5: flipt.data.EvaluationFlag
	(*EvaluationConstraint)(nil),               // 6: flipt.data.EvaluationConstraint
	(*EvaluationRule)(nil),                     // 7: flipt.data.EvaluationRule
	(*EvaluationNamespaceSnapshot)(nil),        // 8: flipt.data.EvaluationNamespaceSnapshot
	(*EvaluationNamespaceSnapshotRequest)(nil), // 9: flipt.data.EvaluationNamespaceSnapshotRequest
	(flipt.RolloutType)(0),                     // 10: flipt.RolloutType
	(flipt.SegmentOperator)(0),                 // 11: flipt.SegmentOperator
	(flipt.MatchType)(0),                       // 12: flipt.MatchType
	(*timestamppb.Timestamp)(nil),              // 13: google.protobuf.Timestamp
	(flipt.FlagType)(0),                        // 14: flipt.FlagType
	(flipt.ComparisonType)(0),                  // 15: flipt.ComparisonType
	(*flipt.Namespace)(nil),                    // 16: flipt.Namespace
}
var file_data_data_proto_depIdxs = []int32{
	10, // 0: flipt.data.EvaluationRollout.type:type_name -> flipt.RolloutType
	3,  // 1: flipt.data.EvaluationRollout.segment:type_name -> flipt.data.EvaluationRolloutSegment
	2,  // 2: flipt.data.EvaluationRollout.threshold:type_name -> flipt.data.EvaluationRolloutThreshold
	11, // 3: flipt.data.EvaluationRolloutSegment.segment_operator:type_name -> flipt.SegmentOperator
	4,  // 4: flipt.data.EvaluationRolloutSegment.segments:type_name -> flipt.data.EvaluationSegment
	12, // 5: flipt.data.EvaluationSegment.match_type:type_name -> flipt.MatchType
	13, // 6: flipt.data.EvaluationSegment.created_at:type_name -> google.protobuf.Timestamp
	13, // 7: flipt.data.EvaluationSegment.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 8: flipt.data.EvaluationSegment.constraints:type_name -> flipt.data.EvaluationConstraint
	14, // 9: flipt.data.EvaluationFlag.type:type_name -> flipt.FlagType
	13, // 10: flipt.data.EvaluationFlag.created_at:type_name -> google.protobuf.Timestamp
	13, // 11: flipt.data.EvaluationFlag.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 12: flipt.data.EvaluationFlag.rules:type_name -> flipt.data.EvaluationRule
	1,  // 13: flipt.data.EvaluationFlag.rollouts:type_name -> flipt.data.EvaluationRollout
	15, // 14: flipt.data.EvaluationConstraint.type:type_name -> flipt.ComparisonType
	4,  // 15: flipt.data.EvaluationRule.segments:type_name -> flipt.data.EvaluationSegment
	11, // 16: flipt.data.EvaluationRule.segment_operator:type_name -> flipt.SegmentOperator
	0,  // 17: flipt.data.EvaluationRule.distributions:type_name -> flipt.data.EvaluationDistribution
	16, // 18: flipt.data.EvaluationNamespaceSnapshot.namespace:type_name -> flipt.Namespace
	5,  // 19: flipt.data.EvaluationNamespaceSnapshot.flags:type_name -> flipt.data.EvaluationFlag
	9,  // 20: flipt.data.DataService.EvaluationSnapshotNamespace:input_type -> flipt.data.EvaluationNamespaceSnapshotRequest
	8,  // 21: flipt.data.DataService.EvaluationSnapshotNamespace:output_type -> flipt.data.EvaluationNamespaceSnapshot
	21, // [21:22] is the sub-list for method output_type
	20, // [20:21] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_data_data_proto_init() }
func file_data_data_proto_init() {
	if File_data_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationRollout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationRolloutThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationRolloutSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationNamespaceSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationNamespaceSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_data_data_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EvaluationRollout_Segment)(nil),
		(*EvaluationRollout_Threshold)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_data_proto_goTypes,
		DependencyIndexes: file_data_data_proto_depIdxs,
		MessageInfos:      file_data_data_proto_msgTypes,
	}.Build()
	File_data_data_proto = out.File
	file_data_data_proto_rawDesc = nil
	file_data_data_proto_goTypes = nil
	file_data_data_proto_depIdxs = nil
}
